{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/Status.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Status","React","Component","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","ProfileInfo","profile","className","classes","rasm","DescriptionBlock","src","photos","large","alt","Preloader","Post","item","require","messagePost","btn","likesCount","maxLength10","maxLengthCreator","MyPosts","memo","postsElements","profilePage","posts","map","p","postsBlock","postsCss","AddPostFormRedux","onSubmit","values","addPost","newPostBody","reduxForm","form","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","compose","MyPostsContainer","connect","state","dispatch","addPostActionCreator","Profile","this","ProfileContainer","userId","match","params","authorizedUserId","getUserProfile","getStatus","update","auth","isAuth","withRouter"],"mappings":"yHACAA,EAAOC,QAAU,CAAC,YAAc,iCAAiC,iBAAmB,sCAAsC,KAAO,4B,oBCAjID,EAAOC,QAAU,CAAC,WAAa,4BAA4B,SAAW,4B,oBCAtED,EAAOC,QAAU,CAAC,KAAO,qB,8HCiBVC,GChBaC,IAAMC,U,iLDG1B,OAAO,6BACH,6D,GAHSD,IAAMC,Y,SEoCZC,EAlCgB,SAACC,GAAU,MAMRC,oBAAS,GAND,mBAMjCC,EANiC,KAMvBC,EANuB,OAOZF,mBAASD,EAAMI,QAPH,mBAOjCA,EAPiC,KAOzBC,EAPyB,KAStCC,qBAAW,WACPD,EAAUL,EAAMI,UAClB,CAACJ,EAAMI,SAcT,OACI,6BACI,kDACEF,GAAY,6BAAK,0BAAMK,cAfR,WACrBJ,GAAY,KAcmDH,EAAMI,QAAU,iBAC1EF,GAAY,6BAAK,2BAAOM,SARV,SAACC,GACpBJ,EAAUI,EAAEC,cAAcC,QAO6BC,OAbhC,WACvBT,GAAY,GACZH,EAAMa,aAAaT,IAWgEU,WAAW,EACjEH,MAAOP,OCV7BW,EAlBK,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,QAASZ,EAA0B,EAA1BA,OAAQS,EAAkB,EAAlBA,aACnC,OAAKG,EAID,6BACI,+CACA,yBAAKC,UAAWC,IAAQC,OAExB,yBAAKF,UAAWC,IAAQE,kBACpB,yBAAKC,IAAKL,EAAQM,OAAOC,MAAOC,IAAI,SACpC,kBAAC,EAAD,CAAwBpB,OAAQA,EAAQS,aAAcA,IACtD,kBAAC,EAAD,QAVD,kBAACY,EAAA,EAAD,O,4CCWAC,EAjBF,SAAC1B,GACV,OACI,6BACI,yBAAKiB,UAAWC,IAAQS,MACpB,yBAAKN,IAAKO,EAAQ,KAAwCJ,IAAI,UAE9D,6BAAMxB,EAAM6B,YACP7B,EAAM8B,KACX,6BACI,uCADJ,IACwB9B,EAAM+B,e,iCCLxCC,EAAcC,YAAiB,IAS/BC,EAAUrC,IAAMsC,MAAK,SAAAnC,GAGvB,IACIoC,EADQpC,EAAMqC,YACQC,MAAMC,KAAI,SAAAC,GAAC,OACjC,kBAAC,EAAD,CAAMX,YAAaW,EAAEX,YAAaE,WAAYS,EAAET,gBAQpD,OACI,yBAAKd,UAAWC,IAAQuB,YACpB,uCAGA,yBAAKxB,UAAWC,IAAQwB,UACnBN,GAEL,6BACI,gDAEJ,kBAACO,EAAD,CAAkBC,SAjBT,SAACC,GACd7C,EAAM8C,QAAQD,EAAOE,oBAoCvBJ,EAAmBK,YAAU,CAACC,KAAM,eAAjBD,EAdL,SAAChD,GAEjB,OAAO,0BAAM4C,SAAU5C,EAAMkD,cACzB,6BAAK,kBAACC,EAAA,EAAD,CAAOC,KAAK,cAAcC,UAAWC,IAAWC,YAAa,eACtDC,SAAU,CAACC,IAAUzB,MAGjC,6BACI,iDAQGE,I,sBC9BfwB,cAEExB,GAIF,IAEeyB,EAFUC,aA1BD,SAACC,GACrB,MAAO,CAIHxB,YAAawB,EAAMxB,gBAIA,SAACyB,GACxB,MAAO,CACHhB,QAAS,SAACC,GACNe,EAASC,YAAqBhB,QAcjBa,CAA6C1B,GCrBvD8B,E,iLAVP,OACI,6BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAahD,QAASiD,KAAKjE,MAAMgB,QAASZ,OAAQ6D,KAAKjE,MAAMI,OAAQS,aAAcoD,KAAKjE,MAAMa,oB,GALxFhB,IAAMC,W,QCEtBoE,E,4LAEE,IAAIC,EAASF,KAAKjE,MAAMoE,MAAMC,OAAOF,OAChCA,IACDA,EAASF,KAAKjE,MAAMsE,kBAKxBL,KAAKjE,MAAMuE,eAAeJ,GAC1BF,KAAKjE,MAAMwE,UAAUL,K,+BAIrB,OACI,6BACI,kBAAC,EAAD,iBAAaF,KAAKjE,MAAlB,CACSgB,QAASiD,KAAKjE,MAAMgB,QACpBZ,OAAQ6D,KAAKjE,MAAMI,OACnBqE,OAAQR,KAAKjE,MAAMa,qB,GAnBbhB,IAAMC,WAgCtB4D,sBACXE,aARkB,SAACC,GAAD,MAAY,CAC9B7C,QAAS6C,EAAMxB,YAAYrB,QAC3BZ,OAAQyD,EAAMxB,YAAYjC,OAC1BkE,iBAAkBT,EAAMa,KAAKP,OAC7BQ,OAAQd,EAAMa,KAAKC,UAIM,CAACJ,mBAAgBC,cAAW3D,mBACrD+D,IAFWlB,CAIZQ","file":"static/js/3.947e3f45.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProfileInfo\":\"ProfileInfo_ProfileInfo__1fu33\",\"DescriptionBlock\":\"ProfileInfo_DescriptionBlock__19OqB\",\"rasm\":\"ProfileInfo_rasm__1gbMV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3NLfk\",\"postsCss\":\"MyPosts_postsCss__11ptd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__85Uro\"};","import React from 'react';\r\nimport {Field} from \"redux-form\";\r\n\r\nclass Status extends React.Component {\r\n    render() {\r\n        return <div>\r\n            <h1>Salom bu klass komponent</h1>\r\n        </div>\r\n\r\n    }\r\n}\r\n// const StatusForm = (props) => {\r\n//     return (\r\n//         <form>\r\n//             <div> <Field> </Field></div>\r\n//         </form>\r\n//         )\r\n// }\r\nexport default Status;","import React from 'react';\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    };\r\n\r\n    activateEditMode = () => {\r\n\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    };\r\n    deActivateEditMode = () => {\r\n\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    };\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n\r\n    };\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status)\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                <div>\r\n                    <span onDoubleClick={this.activateEditMode}>{this.props.status || \"____________\"}</span>\r\n                </div>\r\n                }\r\n                {this.state.editMode &&\r\n                <div>\r\n                    <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deActivateEditMode}\r\n                           value={this.state.status}/>\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;\r\n","import React, {useState,useEffect} from 'react';\r\n\r\n// let arr = [0,() => {}];\r\n// let [a, setA]= arr\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    // let stateWithSetState = useState(false);\r\n    // let editMode = stateWithSetState[0];\r\n    // let setEditMode = stateWithSetState[1]\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n    },[props.status]); // bu yerda (props.status) [props.status] bilan sinxronizatsiya qilinmoqda\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    };\r\n    const deActivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status)\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>salom salom salom</h1>\r\n            {!editMode && <div><span onDoubleClick={activateEditMode}>{props.status || \"____________\"}</span></div>}\r\n            {editMode && <div><input onChange={onStatusChange} onBlur={deActivateEditMode} autoFocus={true}\r\n                                     value={status}/></div>}\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileStatusWithHooks;\r\n","import React from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\"\r\nimport Status from \"./Status\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Salomlaaaarrrrr</h1>\r\n            <div className={classes.rasm}>\r\n            </div>\r\n            <div className={classes.DescriptionBlock}>\r\n                <img src={profile.photos.large} alt=\"foto\"/>\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n                <Status/>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n};\r\nexport default ProfileInfo;\r\n","import React from 'react';\r\nimport classes from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={classes.item}>\r\n                <img src={require('../../../../assets/images/img16.jpg')} alt=\"img16\"/>\r\n\r\n                <div>{props.messagePost}\r\n                    {props.btn}</div>\r\n                <div>\r\n                    <span>like:</span> {props.likesCount}\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nexport default Post;\r\n","import React from 'react';\r\nimport classes from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n//const minLength0 = minLengthCreator(0)\r\n\r\n// var buttonDisabled = {\r\n//     if\r\n// }\r\n\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n    // React.memo (class componentda ShouldComponentUpdate yoki extends PureComponent) --\r\n    // -- bu props va state o'zgarmagan taqdirda bekorga Render ishlashini oldini oladi\r\n    let state = props.profilePage;\r\n    let postsElements = state.posts.map(p =>\r\n        <Post messagePost={p.messagePost} likesCount={p.likesCount}/>);\r\n    // let newPostBody = React.createRef();\r\n    let addNewPost = (values) => {\r\n        props.addPost(values.newPostBody);\r\n    };\r\n    // let removePost = (postId) => {\r\n    //     props.removePost(postId)\r\n    // };\r\n    return (\r\n        <div className={classes.postsBlock}>\r\n            <h2>My post</h2>\r\n            {/*<Post/>*/}\r\n\r\n            <div className={classes.postsCss}>\r\n                {postsElements}\r\n            </div>\r\n            <div>\r\n                <button > removePost</button>\r\n            </div>\r\n            <AddPostFormRedux onSubmit={addNewPost}/>\r\n\r\n        </div>\r\n    )\r\n});\r\n\r\nconst AddPostForm = (props) => {\r\n\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div><Field name=\"newPostBody\" component={Textarea}  placeholder={\"post message\"}\r\n                    validate={[required, maxLength10]}\r\n\r\n        /></div>\r\n        <div>\r\n            <button>ADD Post</button>\r\n        </div>\r\n    </form>\r\n\r\n};\r\n\r\nconst AddPostFormRedux = reduxForm({form: \"PostAddForm\"})(AddPostForm)\r\n\r\nexport default MyPosts;\r\n","import React from 'react';\r\nimport {\r\n    addPostActionCreator,\r\n    deletePostActionCreator,\r\n    removePostCreator,\r\n    updateNewPostActionCreator\r\n} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        // myPostsPage: state.myPostsPage,\r\n        // posts: state.profilePage.posts,\r\n       // newPostBody: state.profilePage.newPostBody,\r\n        profilePage: state.profilePage\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostBody) => {\r\n            dispatch(addPostActionCreator(newPostBody));\r\n        },\r\n        // removePost: (postId) => {\r\n        //     dispatch(deletePostActionCreator(postId))\r\n        // }\r\n    }\r\n};\r\n\r\ncompose(\r\n    //withAuthRedirect\r\n)(MyPosts);\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(MyPosts);\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {reduxForm} from \"redux-form\";\r\n\r\nclass Profile extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <MyPostsContainer/>\r\n                <ProfileInfo profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            // if (!userId) {\r\n            //     this.props.history.push(\"/login\")\r\n            // }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props}\r\n                         profile={this.props.profile}\r\n                         status={this.props.status}\r\n                         update={this.props.updateStatus}/>\r\n            </div>\r\n        )\r\n    };\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n  //  withAuthRedirect\r\n) (ProfileContainer);\r\n\r\n"],"sourceRoot":""}